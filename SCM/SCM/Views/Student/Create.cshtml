
@model SCM_API.Models.Student.StudentCreateViewModel

@{
    ViewData["Title"] = "Create a whole new Student!";
}

<h1>Create Student</h1>

<div>
    <div>
        @if (@Model.Error?.DomainRulesException ?? false)
        {
            <label style="color:red">There's something wrong with the data you informed</label>
            <br />
        }
        @if (@Model.Error?.ErrorMessage != null)
        {
            <label style="color:red">@Model.Error.ErrorMessage</label>
        }
    </div>

    @using (Html.BeginForm("Create", "Student", FormMethod.Post))
    {
        <fieldset>
            <legend>Student Data</legend>

            <div class="editor-label">
                @Html.LabelFor(x => x.Student.FirstName)
            </div>
            <div class="editor-field">
                @Html.EditorFor(x => x.Student.FirstName)
            </div>

            <div class="editor-label">
                @Html.LabelFor(x => x.Student.Surname)
            </div>
            <div class="editor-field">
                @Html.EditorFor(x => x.Student.Surname)
            </div>

            <div class="editor-label">
                @Html.LabelFor(x => x.Student.DateOfBirth)
            </div>
            <div class="editor-field">
                @Html.EditorFor(x => x.Student.DateOfBirth, "{0:dd/MM/yyyy}")
            </div>

            <div class="editor-label">
                @Html.LabelFor(x => x.Student.Gender)
            </div>
            <div class="editor-label">
                <select asp-for="Student.Gender" asp-items="Html.GetEnumSelectList<Scm.Infra.CrossCutting.Enum.GenderEnum>()"></select>
            </div>


            <button style="float:left;" type="submit" class="btn btn-info">Create</button>
        </fieldset>
    }
</div>

<a href="~/">Back</a>